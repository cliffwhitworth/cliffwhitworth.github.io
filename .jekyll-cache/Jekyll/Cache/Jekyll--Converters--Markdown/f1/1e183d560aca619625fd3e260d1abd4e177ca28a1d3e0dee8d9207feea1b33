I"0<p><br />
<a href="https://matplotlib.org/">
https://matplotlib.org/
</a>
<br /></p>
<h4>Scatterplot with Line of Best Fit</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">pyplot</span> <span class="n">as</span> <span class="n">plt</span>

<span class="c1"># use inline to show graph as output</span>
<span class="c1"># %matplotlib inline</span>

<span class="c1"># use plt.show to show graph similar to print()</span>
<span class="c1"># plt.show()</span>

<span class="c1"># possible marker symbols: marker = '+', 'o', '*', 's', ',', '.', '1', '2', '3', '4', ...</span>
<span class="c1"># lw = linewidth, ls = linestyle</span>
<span class="c1"># plt.plot(x, y, color="blue", lw=3, ls='-', marker='+')</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">'scatter'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">yhat</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">'plot'</span><span class="p">)</span>
<span class="c1"># plt.axis([0, 6, 0, 6])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="no">True</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>Pandas Visualization</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">pyplot</span> <span class="n">as</span> <span class="n">plt</span>
<span class="n">import</span> <span class="n">pandas</span> <span class="n">as</span> <span class="n">pd</span>
<span class="n">import</span> <span class="n">numpy</span> <span class="n">as</span> <span class="n">np</span>

<span class="n">random_x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">random</span><span class="p">.</span><span class="nf">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">101</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span>
<span class="n">random_y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">random</span><span class="p">.</span><span class="nf">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">101</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span>

<span class="c1"># df = pd.DataFrame()</span>
<span class="c1"># df['A'] = random_x</span>
<span class="c1"># df['B'] = random_y</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="no">DataFrame</span><span class="p">({</span><span class="s1">'A'</span><span class="p">:</span> <span class="n">random_x</span><span class="p">,</span> <span class="s1">'B'</span><span class="p">:</span> <span class="n">random_y</span><span class="p">})</span>

<span class="c1"># print(plt.style.available)</span>
<span class="c1"># https://matplotlib.org/gallery/style_sheets/style_sheets_reference.html</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">style</span><span class="p">.</span><span class="nf">use</span><span class="p">(</span><span class="s1">'seaborn-whitegrid'</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="nf">plot</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">'A'</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="s1">'B'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>OO</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">pyplot</span> <span class="n">as</span> <span class="n">plt</span>

<span class="c1"># Offers more control</span>
<span class="c1"># Creates blank canvas</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">()</span>

<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="nf">add_axes</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span> <span class="c1"># larger axes</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="nf">add_axes</span><span class="p">([</span><span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">])</span> <span class="c1"># smaller axes</span>

<span class="c1"># Larger Figure Ax 1</span>
<span class="n">ax1</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s1">'b'</span><span class="p">)</span>
<span class="n">ax1</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="s1">'X_label_ax1'</span><span class="p">)</span>
<span class="n">ax1</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="s1">'Y_label_ax2'</span><span class="p">)</span>
<span class="n">ax1</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s1">'Ax 1 Title'</span><span class="p">)</span>

<span class="c1"># Smaller Figure Ax 2</span>
<span class="n">ax2</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="s1">'r'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="s1">'X_label_ax2'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="s1">'Y_label_ax2'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s1">'Ax 2 Title'</span><span class="p">);</span></code></pre></figure>

<p><br /></p>
<h4>3D Plot</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">from</span> <span class="n">mpl_toolkits</span><span class="p">.</span><span class="nf">mplot3d</span> <span class="n">import</span> <span class="no">Axes3D</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="nf">add_subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">,</span> <span class="n">projection</span><span class="o">=</span><span class="s1">'3d'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="no">X</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span> <span class="no">X</span><span class="p">[:,</span><span class="mi">1</span><span class="p">],</span> <span class="no">X</span><span class="p">[:,</span><span class="mi">2</span><span class="p">],</span> <span class="no">Y</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>Subplots</h4>
<p><a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.subplot.html">
Subplots
</a>
<br /></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># plt.subplot(nrows=1, ncols=3, nplt=1)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">131</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">features</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">],</span> <span class="no">Y</span><span class="p">,</span> <span class="s1">'bo'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="s1">'R&amp;D'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">132</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">features</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">],</span> <span class="no">Y</span><span class="p">,</span> <span class="s1">'ro'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="s1">'Admin'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">133</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">features</span><span class="p">[:,</span> <span class="mi">2</span><span class="p">],</span> <span class="no">Y</span><span class="p">,</span> <span class="s1">'yo'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="s1">'Marketing'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>Contour Map, Probability Grid, Decision Boundary</h4>
<p><a href="https://stackoverflow.com/questions/20045994/how-do-i-plot-the-decision-boundary-of-a-regression-using-matplotlib">
Stackoverflow
</a>
<br />
<a href="https://stackoverflow.com/questions/28256058/plotting-decision-boundary-of-logistic-regression">
Stackoverflow
</a>
<br />
<a href="https://www.kunxi.org/notes/machine_learning/logistic_regression/">
www.kunxi.org
</a>
<br /></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="no">X1</span><span class="p">,</span> <span class="no">X2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">meshgrid</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="n">start</span> <span class="o">=</span> <span class="no">X</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">].</span><span class="nf">min</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">stop</span> <span class="o">=</span> <span class="no">X</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">].</span><span class="nf">max</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">step</span> <span class="o">=</span> <span class="mf">0.01</span><span class="p">),</span>
                     <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="n">start</span> <span class="o">=</span> <span class="no">X</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">].</span><span class="nf">min</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">stop</span> <span class="o">=</span> <span class="no">X</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">].</span><span class="nf">max</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">step</span> <span class="o">=</span> <span class="mf">0.01</span><span class="p">))</span>

<span class="c1">#plot background colors</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">gca</span><span class="p">()</span>
<span class="no">Z</span> <span class="o">=</span> <span class="n">classifier</span><span class="p">.</span><span class="nf">predict_proba</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">c_</span><span class="p">[</span><span class="no">X1</span><span class="p">.</span><span class="nf">ravel</span><span class="p">(),</span> <span class="no">X2</span><span class="p">.</span><span class="nf">ravel</span><span class="p">()])[:,</span> <span class="mi">1</span><span class="p">]</span>
<span class="no">Z</span> <span class="o">=</span> <span class="no">Z</span><span class="p">.</span><span class="nf">reshape</span><span class="p">(</span><span class="no">X1</span><span class="p">.</span><span class="nf">shape</span><span class="p">)</span>
<span class="n">cs</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="nf">contourf</span><span class="p">(</span><span class="no">X1</span><span class="p">,</span> <span class="no">X2</span><span class="p">,</span> <span class="no">Z</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s1">'RdBu'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=.</span><span class="mi">2</span><span class="p">)</span>
<span class="n">cs2</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="nf">contour</span><span class="p">(</span><span class="no">X1</span><span class="p">,</span> <span class="no">X2</span><span class="p">,</span> <span class="no">Z</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s1">'RdBu'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=.</span><span class="mi">6</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">clabel</span><span class="p">(</span><span class="n">cs2</span><span class="p">,</span> <span class="n">colors</span> <span class="o">=</span> <span class="s1">'k'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>

<span class="c1"># Plot the points</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="no">X</span><span class="p">[</span><span class="n">y</span> <span class="o">==</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="no">X</span><span class="p">[</span><span class="n">y</span> <span class="o">==</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="s1">'ro'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">'Class 1'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="no">X</span><span class="p">[</span><span class="n">y</span> <span class="o">==</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="no">X</span><span class="p">[</span><span class="n">y</span> <span class="o">==</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="s1">'bo'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">'Class 2'</span><span class="p">)</span>

<span class="c1"># make legend</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">'upper left'</span><span class="p">,</span> <span class="n">scatterpoints</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">numpoints</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>Bowls, Labels, Arrows, Major / Minor Ticks</h4>
<p><br /></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">from</span> <span class="n">matplotlib</span> <span class="n">import</span> <span class="n">colors</span> <span class="n">as</span> <span class="n">mcolors</span>

<span class="c1"># Start the plot</span>
<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="c1"># Setup convex shape</span>
<span class="n">theta_grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">2.5</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span>
<span class="no">J_grid</span> <span class="o">=</span> <span class="n">cost_func</span><span class="p">(</span><span class="n">theta_grid</span><span class="p">[:,</span><span class="n">np</span><span class="p">.</span><span class="nf">newaxis</span><span class="p">])</span>

<span class="c1"># The cost function as a function of its single parameter, theta.</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">theta_grid</span><span class="p">,</span> <span class="no">J_grid</span><span class="p">,</span> <span class="s1">'k'</span><span class="p">)</span>

<span class="c1"># cost function plot with coloured points indicating the</span>
<span class="c1"># parameters chosen and red arrows indicating the steps down the gradient.</span>
<span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'b'</span><span class="p">,</span> <span class="s1">'g'</span><span class="p">,</span> <span class="s1">'m'</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">,</span> <span class="s1">'orange'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="no">N</span><span class="p">):</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">annotate</span><span class="p">(</span><span class="s1">''</span><span class="p">,</span> <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="no">J</span><span class="p">[</span><span class="n">j</span><span class="p">]),</span> <span class="n">xytext</span><span class="o">=</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="no">J</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span>
                   <span class="n">arrowprops</span><span class="o">=</span><span class="p">{</span><span class="s1">'arrowstyle'</span><span class="p">:</span> <span class="s1">'-&gt;'</span><span class="p">,</span> <span class="s1">'color'</span><span class="p">:</span> <span class="s1">'r'</span><span class="p">,</span> <span class="s1">'lw'</span><span class="p">:</span> <span class="mi">1</span><span class="p">},</span>
                   <span class="n">va</span><span class="o">=</span><span class="s1">'center'</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">'center'</span><span class="p">)</span>

<span class="c1"># Labels, titles and a legend.</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">theta</span><span class="p">,</span> <span class="no">J</span><span class="p">,</span> <span class="n">c</span><span class="o">=</span><span class="n">colors</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xlim</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">2.5</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="n">r</span><span class="s1">'$\theta_1$'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="n">r</span><span class="s1">'$J(\theta_1)$'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s1">'Cost Function'</span><span class="p">)</span>

<span class="c1"># major ticks every 1, minor ticks every .1</span>
<span class="n">major_yticks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">minor_yticks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="o">.</span><span class="mi">1</span><span class="p">)</span>
<span class="n">major_xticks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">2.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">minor_xticks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">2.5</span><span class="p">,</span> <span class="o">.</span><span class="mi">1</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="nf">set_yticks</span><span class="p">(</span><span class="n">major_yticks</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_yticks</span><span class="p">(</span><span class="n">minor_yticks</span><span class="p">,</span> <span class="n">minor</span><span class="o">=</span><span class="no">True</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="n">major_xticks</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="n">minor_xticks</span><span class="p">,</span> <span class="n">minor</span><span class="o">=</span><span class="no">True</span><span class="p">)</span>

<span class="c1"># different settings for the grids:</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="s1">'minor'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.4</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="s1">'major'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">xticks</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="o">-.</span><span class="mi">5</span><span class="p">,</span> <span class="mf">2.5</span><span class="p">,</span> <span class="o">.</span><span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="no">True</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>Contour Pyplot</h4>

<p><a href="https://scipython.com/blog/visualizing-the-gradient-descent-method/">
Code that got this started
</a>
<br />
<a href="https://matplotlib.org/api/pyplot_api.html">
Pyplot API
</a>
<br /></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">pylab</span> <span class="n">as</span> <span class="n">plb</span>
<span class="n">from</span> <span class="n">matplotlib</span> <span class="n">import</span> <span class="n">colors</span> <span class="n">as</span> <span class="n">mcolors</span>

<span class="c1"># compute gradient descent</span>
<span class="k">def</span> <span class="nf">gradient_descent</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">,</span> <span class="n">alpha</span><span class="p">,</span> <span class="n">num_iters</span><span class="p">):</span>
    <span class="no">J_history</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="n">num_iters</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="n">num_iters</span><span class="p">):</span>
        <span class="n">theta</span> <span class="o">=</span> <span class="n">theta</span> <span class="o">-</span> <span class="n">alpha</span><span class="o">*</span><span class="p">(</span><span class="mf">1.0</span><span class="o">/</span><span class="n">y</span><span class="p">.</span><span class="nf">size</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">transpose</span><span class="p">(</span><span class="no">X</span><span class="p">).</span><span class="nf">dot</span><span class="p">(</span><span class="no">X</span><span class="p">.</span><span class="nf">dot</span><span class="p">(</span><span class="n">theta</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">transpose</span><span class="p">([</span><span class="n">y</span><span class="p">]))</span>
        <span class="no">J_history</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">compute_cost</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">theta</span><span class="p">,</span> <span class="no">J_history</span>

<span class="c1"># compute cost for linear regression</span>
<span class="k">def</span> <span class="nf">compute_cost</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">):</span>
    <span class="no">J</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">power</span><span class="p">((</span><span class="no">X</span><span class="p">.</span><span class="nf">dot</span><span class="p">(</span><span class="n">theta</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">transpose</span><span class="p">([</span><span class="n">y</span><span class="p">])),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="no">J</span> <span class="o">=</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">/</span> <span class="p">(</span><span class="mi">2</span>  <span class="o">*</span><span class="n">y</span><span class="p">.</span><span class="nf">size</span><span class="p">))</span> <span class="o">*</span> <span class="n">s</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">axis</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="k">return</span> <span class="no">J</span>

<span class="c1"># add the bias column to X</span>
<span class="no">X</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">ones</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="n">y</span><span class="p">.</span><span class="nf">size</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="no">X</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span>

<span class="c1"># theta parameters</span>
<span class="n">thetaP</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>

<span class="c1"># compute and display initial cost</span>
<span class="n">cost</span> <span class="o">=</span> <span class="n">cost_function</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">thetaP</span><span class="p">)</span>

<span class="c1"># gradient descent</span>
<span class="n">thetaP</span><span class="p">,</span> <span class="no">J_history</span> <span class="o">=</span> <span class="n">gradient_descent</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">thetaP</span><span class="p">,</span> <span class="n">alpha</span><span class="p">,</span> <span class="n">iterations</span><span class="p">)</span>

<span class="c1"># grid over which we will calculate J</span>
<span class="n">theta0</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">theta1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>

<span class="c1"># initialize J of theta to a matrix of 0's</span>
<span class="no">Jtheta</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="n">theta0</span><span class="p">.</span><span class="nf">size</span><span class="p">,</span> <span class="n">theta1</span><span class="p">.</span><span class="nf">size</span><span class="p">))</span>

<span class="c1"># fill out J of theta</span>
<span class="k">for</span> <span class="n">t1</span><span class="p">,</span> <span class="n">element</span> <span class="k">in</span> <span class="n">enumerate</span><span class="p">(</span><span class="n">theta0</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">t2</span><span class="p">,</span> <span class="n">element2</span> <span class="k">in</span> <span class="n">enumerate</span><span class="p">(</span><span class="n">theta1</span><span class="p">):</span>
        <span class="n">thetaT</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
        <span class="n">thetaT</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">element</span>
        <span class="n">thetaT</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">element2</span>
        <span class="no">Jtheta</span><span class="p">[</span><span class="n">t1</span><span class="p">,</span> <span class="n">t2</span><span class="p">]</span> <span class="o">=</span> <span class="n">compute_cost</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">thetaT</span><span class="p">)</span>

<span class="c1"># tranpose J of theta</span>
<span class="no">Jtheta</span> <span class="o">=</span> <span class="no">Jtheta</span><span class="o">.</span><span class="no">T</span>

<span class="c1"># contour plotting</span>
<span class="n">plb</span><span class="p">.</span><span class="nf">contour</span><span class="p">(</span><span class="n">theta0</span><span class="p">,</span> <span class="n">theta1</span><span class="p">,</span> <span class="no">Jtheta</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="nf">logspace</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">20</span><span class="p">))</span>

<span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="no">N</span><span class="p">):</span>
    <span class="n">plb</span><span class="p">.</span><span class="nf">annotate</span><span class="p">(</span><span class="s1">''</span><span class="p">,</span> <span class="n">xy</span><span class="o">=</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">xytext</span><span class="o">=</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span>
                   <span class="n">arrowprops</span><span class="o">=</span><span class="p">{</span><span class="s1">'arrowstyle'</span><span class="p">:</span> <span class="s1">'-&gt;'</span><span class="p">,</span> <span class="s1">'color'</span><span class="p">:</span> <span class="s1">'r'</span><span class="p">,</span> <span class="s1">'lw'</span><span class="p">:</span> <span class="mi">1</span><span class="p">},</span>
                   <span class="n">va</span><span class="o">=</span><span class="s1">'center'</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">'center'</span><span class="p">)</span>

<span class="n">plb</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="o">*</span><span class="n">zip</span><span class="p">(</span><span class="o">*</span><span class="n">theta</span><span class="p">),</span> <span class="n">c</span><span class="o">=</span><span class="n">colors</span><span class="p">)</span>

<span class="n">plb</span><span class="p">.</span><span class="nf">minorticks_on</span><span class="p">()</span>
<span class="n">plb</span><span class="p">.</span><span class="nf">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s1">'x'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s1">'both'</span><span class="p">)</span>

<span class="n">plb</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="n">r</span><span class="s1">'$\theta_0$'</span><span class="p">)</span>
<span class="n">plb</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="n">r</span><span class="s1">'$\theta_1$'</span><span class="p">)</span>
<span class="n">plb</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">thetaP</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">thetaP</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
<span class="n">plb</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="no">True</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s1">'both'</span><span class="p">)</span>
<span class="n">plb</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>A Theta Fit</h4>

<p><a href="https://scipython.com/blog/visualizing-the-gradient-descent-method/">
Code that got this started
</a>
<br /></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">numpy</span> <span class="n">as</span> <span class="n">np</span>
<span class="n">import</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">pyplot</span> <span class="n">as</span> <span class="n">plt</span>
<span class="n">from</span> <span class="n">matplotlib</span> <span class="n">import</span> <span class="n">colors</span> <span class="n">as</span> <span class="n">mcolors</span>

<span class="c1"># dataset</span>
<span class="n">dataset</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>

<span class="c1"># x and y arrays</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="n">row</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">row</span> <span class="k">in</span> <span class="n">dataset</span><span class="p">])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="n">row</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">row</span> <span class="k">in</span> <span class="n">dataset</span><span class="p">])</span>

<span class="c1"># The plot</span>
<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="s1">'x'</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">40</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">'k'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">cost_function</span><span class="p">(</span><span class="n">theta1</span><span class="p">):</span>
    <span class="n">theta1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">atleast_2d</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">asarray</span><span class="p">(</span><span class="n">theta1</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">np</span><span class="p">.</span><span class="nf">average</span><span class="p">((</span><span class="n">y</span><span class="o">-</span><span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">theta1</span><span class="p">))</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>

<span class="c1"># Take N steps with learning rate alpha down the steepest gradient, starting at theta1 = 0.</span>
<span class="no">N</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">alpha</span> <span class="o">=</span> <span class="o">.</span><span class="mi">1</span>
<span class="n">theta</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">m</span> <span class="o">=</span> <span class="mi">10</span>

<span class="no">J</span> <span class="o">=</span> <span class="p">[</span><span class="n">cost_function</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="mi">0</span><span class="p">])[</span><span class="mi">0</span><span class="p">]]</span>
<span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">last_theta</span> <span class="o">=</span> <span class="n">theta</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">this_theta</span> <span class="o">=</span> <span class="n">last_theta</span> <span class="o">-</span> <span class="n">alpha</span> <span class="o">/</span> <span class="n">m</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(((</span><span class="n">x</span><span class="o">*</span><span class="n">last_theta</span><span class="p">)</span> <span class="o">-</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="n">x</span><span class="p">)</span>
    <span class="n">theta</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">this_theta</span><span class="p">)</span>
    <span class="no">J</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">cost_function</span><span class="p">(</span><span class="n">this_theta</span><span class="p">))</span>

<span class="c1"># Get some colors</span>
<span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'b'</span><span class="p">,</span> <span class="s1">'g'</span><span class="p">,</span> <span class="s1">'m'</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">,</span> <span class="s1">'orange'</span><span class="p">]</span>
<span class="n">all_colors</span> <span class="o">=</span> <span class="n">dict</span><span class="p">(</span><span class="n">mcolors</span><span class="o">.</span><span class="no">BASE_COLORS</span><span class="p">,</span> <span class="o">**</span><span class="n">mcolors</span><span class="o">.</span><span class="no">CSS4_COLORS</span><span class="p">)</span>

<span class="k">for</span> <span class="n">value</span> <span class="k">in</span> <span class="ss">all_colors:
    </span><span class="n">colors</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">theta</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">color</span><span class="o">=</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">r</span><span class="s1">'$\theta_1 = {:.3f}$'</span><span class="p">.</span><span class="nf">format</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>

<span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="no">N</span><span class="p">):</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">]),</span> <span class="n">color</span><span class="o">=</span><span class="n">colors</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">r</span><span class="s1">'$\theta_1 = {:.3f}$'</span><span class="p">.</span><span class="nf">format</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">]))</span>

<span class="c1"># Labels, titles and a legend.</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="n">r</span><span class="s1">'$x$'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="n">r</span><span class="s1">'$y$'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s1">'A Theta Fit'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">'upper left'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="s1">'small'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>
<h4>Convergence</h4>

<p><a href="https://stackoverflow.com/questions/16640470/how-to-determine-the-learning-rate-and-the-variance-in-a-gradient-descent-algori">
Convergence
</a>
<br /></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">numpy</span> <span class="n">as</span> <span class="n">np</span>
<span class="n">import</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">pyplot</span> <span class="n">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">computeCost</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">):</span>

    <span class="c1"># Initialize J</span>
    <span class="no">J</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="n">s</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">power</span><span class="p">((</span> <span class="no">X</span><span class="p">.</span><span class="nf">dot</span><span class="p">(</span><span class="n">theta</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">transpose</span><span class="p">([</span><span class="n">y</span><span class="p">])</span> <span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="no">J</span> <span class="o">=</span> <span class="p">(</span><span class="mf">1.0</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">y</span><span class="p">.</span><span class="nf">size</span><span class="p">))</span> <span class="o">*</span> <span class="n">s</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">)</span>

    <span class="k">return</span> <span class="no">J</span>

<span class="k">def</span> <span class="nf">gradientDescent</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">,</span> <span class="n">alpha</span><span class="p">,</span> <span class="n">num_iters</span><span class="p">):</span>

    <span class="c1"># Keep track of J</span>
    <span class="no">J_history</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">num_iters</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>

    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="n">num_iters</span><span class="p">):</span>

        <span class="n">theta</span> <span class="o">=</span> <span class="n">theta</span> <span class="o">-</span> <span class="n">alpha</span><span class="o">*</span><span class="p">(</span><span class="mf">1.0</span><span class="o">/</span><span class="n">y</span><span class="p">.</span><span class="nf">size</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">transpose</span><span class="p">(</span><span class="no">X</span><span class="p">).</span><span class="nf">dot</span><span class="p">(</span><span class="no">X</span><span class="p">.</span><span class="nf">dot</span><span class="p">(</span><span class="n">theta</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">transpose</span><span class="p">([</span><span class="n">y</span><span class="p">]))</span>

        <span class="c1"># Save the cost J in every iteration    </span>
        <span class="no">J_history</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">computeCost</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">theta</span><span class="p">,</span> <span class="no">J_history</span>

<span class="c1"># dataset</span>
<span class="n">dataset</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>

<span class="c1"># x and y arrays</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="n">row</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">row</span> <span class="k">in</span> <span class="n">dataset</span><span class="p">])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="n">row</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">row</span> <span class="k">in</span> <span class="n">dataset</span><span class="p">])</span>

<span class="c1"># Add the bias</span>
<span class="no">X</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">ones</span><span class="p">((</span><span class="n">y</span><span class="p">.</span><span class="nf">size</span><span class="p">,</span> <span class="mi">1</span><span class="p">)).</span><span class="nf">astype</span><span class="p">(</span><span class="n">int</span><span class="p">),</span> <span class="n">values</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">vstack</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>

<span class="c1"># Iterations and learning rate</span>
<span class="no">N</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">alpha</span> <span class="o">=</span> <span class="o">.</span><span class="mi">1</span>

<span class="c1"># Init Theta</span>
<span class="n">theta</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="no">X</span><span class="p">.</span><span class="nf">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mi">1</span><span class="p">))</span>

<span class="n">theta</span><span class="p">,</span> <span class="no">J_history</span> <span class="o">=</span> <span class="n">gradientDescent</span><span class="p">(</span><span class="no">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">theta</span><span class="p">,</span> <span class="n">alpha</span><span class="p">,</span> <span class="no">N</span><span class="p">)</span>

<span class="c1"># Plot the convergence graph</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">range</span><span class="p">(</span><span class="no">J_history</span><span class="p">.</span><span class="nf">size</span><span class="p">),</span> <span class="no">J_history</span><span class="p">,</span> <span class="s2">"-b"</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span> <span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="s1">'Convergence'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="s1">'Number of iterations'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="s1">'Cost J'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>

<h4>ROC / AUC</h4>

<p><a href="https://towardsdatascience.com/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8">Towards data science</a></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># https://towardsdatascience.com/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8</span>
<span class="n">logit_roc_auc</span> <span class="o">=</span> <span class="n">roc_auc_score</span><span class="p">(</span><span class="n">ny</span><span class="p">,</span> <span class="n">model</span><span class="p">.</span><span class="nf">predict</span><span class="p">(</span><span class="n">nX</span><span class="p">))</span>
<span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">,</span> <span class="n">thresholds</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span><span class="n">ny</span><span class="p">,</span> <span class="n">model</span><span class="p">.</span><span class="nf">predict_proba</span><span class="p">(</span><span class="n">nX</span><span class="p">)[:,</span><span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">'Logistic Regression (area = %0.2f)'</span> <span class="o">%</span> <span class="n">logit_roc_auc</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span><span class="s1">'r--'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlim</span><span class="p">([</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylim</span><span class="p">([</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.05</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="s1">'False Positive Rate'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="s1">'True Positive Rate'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="s1">'Receiver operating characteristic'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s2">"lower right"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>

<h4>Logistic / Linear Regression Plot</h4>

<p><a href="http://scikit-learn.org/stable/auto_examples/linear_model/plot_logistic.html#sphx-glr-auto-examples-linear-model-plot-logistic-py">Logistic / linear plot</a></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Code source: Gael Varoquaux</span>
<span class="c1"># License: BSD 3 clause</span>

<span class="c1"># Plot the logistic and linear models</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">clf</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">'Feature'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s1">'Class'</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="s1">'black'</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="no">X_line</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">model_func</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
    <span class="k">return</span> <span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">x</span><span class="p">))</span>

<span class="n">loss</span> <span class="o">=</span> <span class="n">model_func</span><span class="p">(</span><span class="no">X_line</span> <span class="o">*</span> <span class="n">model</span><span class="p">.</span><span class="nf">coef_</span> <span class="o">+</span> <span class="n">model</span><span class="p">.</span><span class="nf">intercept_</span><span class="p">).</span><span class="nf">ravel</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="no">X_line</span><span class="p">,</span> <span class="n">loss</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">'red'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">ols</span> <span class="o">=</span> <span class="no">LinearRegression</span><span class="p">()</span>
<span class="n">ols</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">nX</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">'Class'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="no">X_line</span><span class="p">,</span> <span class="n">ols</span><span class="p">.</span><span class="nf">coef_</span> <span class="o">*</span> <span class="no">X_line</span> <span class="o">+</span> <span class="n">ols</span><span class="p">.</span><span class="nf">intercept_</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">axhline</span><span class="p">(</span><span class="o">.</span><span class="mi">5</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">'.5'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="s1">'Class'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="s1">'Feature'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xticks</span><span class="p">(</span><span class="n">range</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">yticks</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">((</span><span class="s1">'Logistic Regression Model'</span><span class="p">,</span> <span class="s1">'Linear Regression Model'</span><span class="p">),</span> <span class="n">loc</span><span class="o">=</span><span class="s2">"lower right"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure>

<p><br /></p>

<h4>Candlesticks</h4>

<p><a href="https://nbviewer.jupyter.org/github/cliffwhitworth/machine_learning_notebooks/blob/master/Charts.ipynb">
Notebook</a></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># deprecated from matplotlib.mpl_finance import candlestick_ohlc</span>
<span class="n">from</span> <span class="n">mpl_finance</span> <span class="n">import</span> <span class="n">candlestick_ohlc</span>
<span class="n">from</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">dates</span> <span class="n">import</span> <span class="no">DateFormatter</span><span class="p">,</span> <span class="n">date2num</span><span class="p">,</span> <span class="no">WeekdayLocator</span><span class="p">,</span> <span class="no">DayLocator</span><span class="p">,</span> <span class="no">MONDAY</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>

<span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot2grid</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot2grid</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
<span class="n">ax3</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot2grid</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="n">ax4</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot2grid</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
<span class="n">ax5</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot2grid</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>

<span class="n">plots</span> <span class="o">=</span> <span class="p">[(</span><span class="n">ax1</span><span class="p">,</span> <span class="n">googl</span><span class="p">,</span> <span class="s1">'GOOGL'</span><span class="p">),(</span><span class="n">ax2</span><span class="p">,</span> <span class="n">goog</span><span class="p">,</span> <span class="s1">'GOOG'</span><span class="p">),(</span><span class="n">ax3</span><span class="p">,</span> <span class="n">msft</span><span class="p">,</span> <span class="s1">'MSFT'</span><span class="p">),(</span><span class="n">ax4</span><span class="p">,</span> <span class="n">aapl</span><span class="p">,</span> <span class="s1">'AAPL'</span><span class="p">),(</span><span class="n">ax5</span><span class="p">,</span> <span class="n">amzn</span><span class="p">,</span> <span class="s1">'AMZN'</span><span class="p">)]</span>

<span class="k">for</span> <span class="n">ax</span><span class="p">,</span> <span class="n">symbol</span><span class="p">,</span> <span class="n">title</span> <span class="k">in</span> <span class="ss">plots:
    </span><span class="c1"># Get days in month</span>
    <span class="n">df_reset</span> <span class="o">=</span> <span class="n">symbol</span><span class="p">.</span><span class="nf">loc</span><span class="p">[</span><span class="s1">'2018-11'</span><span class="ss">:'2018-11'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>

    <span class="c1"># Create a new column of numerical "date" values for matplotlib to use</span>
    <span class="n">df_reset</span><span class="p">[</span><span class="s1">'date_ax'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_reset</span><span class="p">[</span><span class="s1">'date'</span><span class="p">].</span><span class="nf">apply</span><span class="p">(</span><span class="nb">lambda</span> <span class="ss">date: </span><span class="n">date2num</span><span class="p">(</span><span class="n">date</span><span class="p">))</span>
    <span class="n">df_values</span> <span class="o">=</span> <span class="p">[</span><span class="n">tuple</span><span class="p">(</span><span class="n">vals</span><span class="p">)</span> <span class="k">for</span> <span class="n">vals</span> <span class="k">in</span> <span class="n">df_reset</span><span class="p">[[</span><span class="s1">'date_ax'</span><span class="p">,</span> <span class="s1">'open'</span><span class="p">,</span> <span class="s1">'high'</span><span class="p">,</span> <span class="s1">'low'</span><span class="p">,</span> <span class="s1">'close'</span><span class="p">]].</span><span class="nf">values</span><span class="p">]</span>

    <span class="n">mondays</span> <span class="o">=</span> <span class="no">WeekdayLocator</span><span class="p">(</span><span class="no">MONDAY</span><span class="p">)</span>        <span class="c1"># major ticks on the mondays</span>
    <span class="n">alldays</span> <span class="o">=</span> <span class="no">DayLocator</span><span class="p">()</span>                  <span class="c1"># minor ticks on the days</span>
    <span class="n">weekFormatter</span> <span class="o">=</span> <span class="no">DateFormatter</span><span class="p">(</span><span class="s1">'%b %d'</span><span class="p">)</span>  <span class="c1"># e.g., Jan 12</span>
    <span class="n">dayFormatter</span> <span class="o">=</span> <span class="no">DateFormatter</span><span class="p">(</span><span class="s1">'%d'</span><span class="p">)</span>      <span class="c1"># e.g., 12</span>

    <span class="c1">#Plot it</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">xaxis</span><span class="p">.</span><span class="nf">set_major_locator</span><span class="p">(</span><span class="n">mondays</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">xaxis</span><span class="p">.</span><span class="nf">set_minor_locator</span><span class="p">(</span><span class="n">alldays</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">xaxis</span><span class="p">.</span><span class="nf">set_major_formatter</span><span class="p">(</span><span class="n">weekFormatter</span><span class="p">)</span>

    <span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="n">title</span><span class="p">)</span>

    <span class="n">candlestick_ohlc</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">df_values</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span> <span class="n">colorup</span><span class="o">=</span><span class="s1">'g'</span><span class="p">,</span><span class="n">colordown</span><span class="o">=</span><span class="s1">'r'</span><span class="p">);</span></code></pre></figure>

:ET