I"ÇN<p><br />
Hat tip to
<a href="https://www.udemy.com/user/soledad-galli/">
Soledad Galli
</a></p>
<p>Replace values based on training set for both training and test sets</p>

<p><br /></p>
<h4>Missing Values</h4>
<p>Missing Completely at Random, Missing at Random, Missing Not at Random</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Sample data</span>
<span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
    <span class="s1">'some.csv'</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">use_cols</span><span class="p">).</span><span class="nf">sample</span><span class="p">(</span>
        <span class="mi">10000</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Inspet Values</span>
<span class="n">dataframe</span><span class="p">.</span><span class="nf">column</span><span class="p">.</span><span class="nf">dropna</span><span class="p">().</span><span class="nf">unique</span><span class="p">()</span>

<span class="c1"># Values distribution</span>
<span class="n">dataframe</span><span class="p">.</span><span class="nf">column</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>

<span class="c1"># Creating a binary variable based on values in another column</span>
<span class="n">dataframe</span><span class="p">[</span><span class="s1">'binary_column'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="n">dataframe</span><span class="p">.</span><span class="nf">column</span><span class="p">.</span><span class="nf">isin</span><span class="p">([</span><span class="s1">'Some Value'</span><span class="p">]),</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

<span class="c1"># Count and plot values</span>
<span class="n">dataframe</span><span class="p">[</span><span class="s1">'some column'</span><span class="p">].</span><span class="nf">value_counts</span><span class="p">().</span><span class="nf">plot</span><span class="p">.</span><span class="nf">bar</span><span class="p">()</span>

<span class="c1"># Percentage of count values</span>
<span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">value_counts</span><span class="p">()</span> <span class="o">/</span> <span class="n">len</span><span class="p">(</span><span class="n">dataframe</span><span class="p">)</span>

<span class="c1"># Count isnull per column</span>
<span class="n">dataframe</span><span class="p">.</span><span class="nf">isnull</span><span class="p">().</span><span class="nf">sum</span><span class="p">()</span>

<span class="c1"># Find precentages</span>
<span class="n">dataframe</span><span class="p">.</span><span class="nf">groupby</span><span class="p">([</span><span class="s1">'Target'</span><span class="p">])[</span><span class="s1">'Feature'</span><span class="p">].</span><span class="nf">mean</span><span class="p">()</span>

<span class="c1"># Missing count and percentages based on missing</span>
<span class="n">missing</span> <span class="o">=</span> <span class="n">len</span><span class="p">(</span><span class="n">dataframe</span><span class="p">[</span><span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">isnull</span><span class="p">()])</span>
<span class="n">dataframe</span><span class="p">[</span><span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">isnull</span><span class="p">()].</span><span class="nf">groupby</span><span class="p">([</span><span class="s1">'ColumnToCompare'</span><span class="p">])[</span><span class="s1">'Column'</span><span class="p">].</span><span class="nf">count</span><span class="p">().</span><span class="nf">sort_values</span><span class="p">()</span> <span class="o">/</span> <span class="n">missing</span></code></pre></figure>

<p><br /></p>
<h4>Outliers</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Simulate outlier</span>
<span class="n">import</span> <span class="n">seaborn</span> <span class="n">as</span> <span class="n">sns</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">distplot</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="no">Age</span><span class="p">.</span><span class="nf">fillna</span><span class="p">(</span><span class="n">some</span> <span class="n">outlier</span> <span class="n">value</span><span class="p">))</span>

<span class="c1"># Show distribution of values</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s1">'Distribution'</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="s1">'X'</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="s1">'Y'</span><span class="p">)</span>

<span class="c1"># Boxplot of distribution</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">.</span><span class="nf">boxplot</span><span class="p">(</span><span class="n">column</span><span class="o">=</span><span class="s1">'Column'</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s1">'Boxplot'</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="s1">'X'</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="s1">'Y'</span><span class="p">)</span>

<span class="c1"># Describe and define IQR, Lower_fence, Upper_fence</span>
<span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">describe</span><span class="p">()</span>
<span class="no">IQR</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">quantile</span><span class="p">(</span><span class="mf">0.75</span><span class="p">)</span> <span class="o">-</span> <span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">quantile</span><span class="p">(</span><span class="mf">0.25</span><span class="p">)</span>
<span class="no">Lower_fence</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">quantile</span><span class="p">(</span><span class="mf">0.25</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="no">IQR</span> <span class="o">*</span> <span class="mf">1.5</span><span class="p">)</span> <span class="c1"># sometimes 3 is used</span>
<span class="no">Upper_fence</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">quantile</span><span class="p">(</span><span class="mf">0.75</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="no">IQR</span> <span class="o">*</span> <span class="mf">1.5</span><span class="p">)</span> <span class="c1"># instead of 1.5</span>

<span class="c1"># Add a column with redefined outliers and run algorithms to see impact</span>
<span class="c1"># Upper boundary values, capping, top-coding</span></code></pre></figure>

<p><br /></p>
<h4>Labels</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Reduce cardinality of variable</span>
<span class="n">dataframe</span><span class="p">[</span><span class="s1">'New Column'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s1">'Column'</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="n">str</span><span class="p">).</span><span class="nf">str</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span></code></pre></figure>

<p><br /></p>
<h4>Rare Values</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Show relationships</span>
<span class="n">relationships</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="no">Series</span><span class="p">(</span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'Feature'</span><span class="p">].</span><span class="nf">value_counts</span><span class="p">()</span> <span class="o">/</span> <span class="n">len</span><span class="p">(</span><span class="n">dataframe</span><span class="p">)).</span><span class="nf">reset_index</span>
<span class="n">relationships</span><span class="p">.</span><span class="nf">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'Feature'</span><span class="p">,</span> <span class="s1">'Feature_Percent'</span><span class="p">]</span>

<span class="c1"># Show means and merge with relationships</span>
<span class="n">means</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="nf">groupby</span><span class="p">([</span><span class="s1">'Feature'</span><span class="p">])[</span><span class="s1">'NonBinaryTarget'</span><span class="p">].</span><span class="nf">mean</span><span class="p">().</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="n">relationships</span> <span class="o">=</span> <span class="n">relationships</span><span class="p">.</span><span class="nf">merge</span><span class="p">(</span><span class="n">means</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s1">'Feature'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s1">'left'</span><span class="p">)</span>

<span class="c1"># Regroup rare labels</span>
<span class="n">dataframe</span><span class="p">[</span><span class="n">dataframe</span> <span class="o">&gt;=</span> <span class="mf">0.1</span><span class="p">].</span><span class="nf">index</span>
<span class="n">group</span> <span class="o">=</span> <span class="p">{</span>
    <span class="ss">l: </span><span class="p">(</span><span class="s1">'rare'</span> <span class="k">if</span> <span class="n">l</span> <span class="n">not</span> <span class="k">in</span> <span class="n">dataframe</span><span class="p">[</span><span class="n">dataframe</span> <span class="o">&gt;=</span> <span class="mf">0.1</span><span class="p">].</span><span class="nf">index</span> <span class="k">else</span> <span class="n">l</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">l</span> <span class="k">in</span> <span class="n">dataframe</span><span class="p">.</span><span class="nf">index</span>
<span class="p">}</span>
<span class="n">dataframe</span><span class="p">[</span><span class="s1">'Grouped_Feature'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s1">'Feature'</span><span class="p">].</span><span class="nf">map</span><span class="p">(</span><span class="n">group</span><span class="p">)</span>

<span class="c1"># Lables unique to train or test sets</span>
<span class="n">unique_train</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="k">in</span> <span class="no">X_train</span><span class="p">[</span><span class="s1">'Feature'</span><span class="p">].</span><span class="nf">unique</span><span class="p">()</span> <span class="k">if</span> <span class="n">x</span> <span class="n">not</span> <span class="k">in</span> <span class="no">X_test</span><span class="p">[</span><span class="s1">'Feature'</span><span class="p">].</span><span class="nf">unique</span><span class="p">()</span>
<span class="p">]</span></code></pre></figure>

<p><br /></p>
<h4>Missingness</h4>
<p>Capture the importance of missingness by creating an additional variable indicating whether the data was missing for that observation (1) or not (0)</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="no">X_train</span><span class="p">[</span><span class="s1">'Feature_NaN'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="no">X_train</span><span class="p">[</span><span class="s1">'Feature'</span><span class="p">].</span><span class="nf">isnull</span><span class="p">(),</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span></code></pre></figure>

<p><br /></p>
<h4>Imputation</h4>
<p>Imputation alters variance of original distribution and should be done over the training set, and then propagated to the test set.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Missing values</span>
<span class="n">dataframe</span><span class="p">.</span><span class="nf">isnull</span><span class="p">().</span><span class="nf">mean</span><span class="p">()</span>

<span class="c1"># Separate into training and testing set</span>
<span class="c1"># Impute mean and zero to training set</span>
<span class="c1"># Mean if Gaussian, median if not</span>
<span class="no">X_train</span><span class="p">[</span><span class="n">variable</span><span class="o">+</span><span class="s1">' median'</span><span class="p">]</span> <span class="o">=</span> <span class="no">X_train</span><span class="p">[</span><span class="n">variable</span><span class="p">].</span><span class="nf">fillna</span><span class="p">(</span><span class="n">train_median</span><span class="p">)</span>
<span class="no">X_train</span><span class="p">[</span><span class="n">variable</span><span class="o">+</span><span class="s1">' zero'</span><span class="p">]</span> <span class="o">=</span> <span class="no">X_train</span><span class="p">[</span><span class="n">variable</span><span class="p">].</span><span class="nf">fillna</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="no">X_test</span><span class="p">[</span><span class="n">variable</span><span class="o">+</span><span class="s1">' median'</span><span class="p">]</span> <span class="o">=</span> <span class="no">X_test</span><span class="p">[</span><span class="n">variable</span><span class="p">].</span><span class="nf">fillna</span><span class="p">(</span><span class="n">train_median</span><span class="p">)</span>

<span class="c1"># Random sample</span>
<span class="c1"># Use random_state to repeat values</span>
<span class="no">X_train</span><span class="p">[</span><span class="n">variable</span><span class="p">].</span><span class="nf">dropna</span><span class="p">().</span><span class="nf">sample</span><span class="p">(</span><span class="no">X_train</span><span class="p">[</span><span class="n">variable</span><span class="p">].</span><span class="nf">isnull</span><span class="p">().</span><span class="nf">sum</span><span class="p">(),</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="c1"># End of distribution</span>
<span class="no">X_train</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span><span class="o">+</span><span class="mf">1.5</span><span class="o">*</span><span class="no">X_train</span><span class="o">.</span><span class="no">Column</span><span class="p">.</span><span class="nf">std</span><span class="p">()</span>

<span class="c1"># Arbitrary value</span>
<span class="c1"># Adding a missingness category</span></code></pre></figure>

<p><br /></p>
<h4>Encoding</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># One hot encoding</span>
<span class="c1"># Ordinal encoding</span>
<span class="c1"># Count or frequency encoding</span>
<span class="c1"># Target guided encoding</span>
<span class="c1"># Mean encoding</span>
<span class="c1"># Weight of evidence encoding</span>
<span class="c1"># Probabiliy ration encoding</span>
<span class="n">prob_df</span> <span class="o">=</span> <span class="no">X_train</span><span class="p">.</span><span class="nf">groupby</span><span class="p">([</span><span class="s1">'Feature'</span><span class="p">])[</span><span class="s1">'Target'</span><span class="p">].</span><span class="nf">mean</span><span class="p">()</span>
<span class="n">prob_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="no">DataFrame</span><span class="p">(</span><span class="n">prob_df</span><span class="p">)</span>
<span class="n">prob_df</span><span class="p">[</span><span class="s1">'FeatureCompliment'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">-</span><span class="n">prob_df</span><span class="o">.</span><span class="no">Feature</span>
<span class="n">prob_df</span><span class="p">[</span><span class="s1">'ratio'</span><span class="p">]</span> <span class="o">=</span> <span class="n">prob_df</span><span class="o">.</span><span class="no">Feature</span><span class="o">/</span><span class="n">prob_df</span><span class="o">.</span><span class="no">FeatureCompliment</span>
<span class="n">label_ratios</span> <span class="o">=</span> <span class="n">prob_df</span><span class="p">[</span><span class="s1">'ratio'</span><span class="p">].</span><span class="nf">to_dict</span><span class="p">()</span>
<span class="no">X_train</span><span class="p">[</span><span class="s1">'Feature_ratio'</span><span class="p">]</span> <span class="o">=</span> <span class="no">X_train</span><span class="o">.</span><span class="no">Feature</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="n">label_ratios</span><span class="p">)</span>
<span class="no">X_test</span><span class="p">[</span><span class="s1">'Feature_ratio'</span><span class="p">]</span> <span class="o">=</span> <span class="no">X_test</span><span class="o">.</span><span class="no">Feature</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="n">label_ratios</span><span class="p">)</span></code></pre></figure>

<p><br /></p>
<h4>Misc Functions</h4>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Convert series to data to_frame</span>
<span class="c1"># https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.to_frame.html</span>
<span class="no">Series</span><span class="p">.</span><span class="nf">to_frame</span><span class="p">())</span></code></pre></figure>

:ET